---
import CardProductComponent from "./sub-components/CardProductComponent.astro";

const products = [
  {
    id: 1,
    name: "Труба плоскоовальная",
    size: "10x10",
    image: "/images/catalog/01.jpg",
  },
  {
    id: 2,
    name: "Труба квадратная",
    size: "10x10",
    image: "/images/catalog/02.jpg",
  },
  {
    id: 3,
    name: "Труба квадратная",
    size: "10x10",
    image: "/images/catalog/03.jpg",
  },
  {
    id: 4,
    name: "Труба квадратная",
    size: "10x10",
    image: "/images/catalog/04.jpg",
  },
  {
    id: 5,
    name: "Труба круглая",
    size: "10x10",
    image: "/images/catalog/05.jpg",
  },
  {
    id: 6,
    name: "Труба круглая",
    size: "10x10",
    image: "/images/catalog/06.jpg",
  },
  {
    id: 7,
    name: "Труба круглая",
    size: "10x10",
    image: "/images/catalog/07.jpg",
  },
  {
    id: 8,
    name: "Труба прямоугольная",
    size: "10x10",
    image: "/images/catalog/08.jpg",
  },
  {
    id: 9,
    name: "Труба прямоугольная",
    size: "10x10",
    image: "/images/catalog/09.jpg",
  },
  {
    id: 10,
    name: "Труба прямоугольная",
    size: "10x10",
    image: "/images/catalog/10.jpg",
  },
  {
    id: 11,
    name: "Труба овальная",
    size: "10x10",
    image: "/images/catalog/11.jpg",
  },
  {
    id: 12,
    name: "Труба арочная",
    size: "10x10",
    image: "/images/catalog/12.jpg",
  },
  {
    id: 13,
    name: "Труба мебельная тонкостенная",
    size: "10x10",
    image: "/images/catalog/13.jpg",
  },
  {
    id: 14,
    name: "Труба оцинкованная",
    size: "10x10",
    image: "/images/catalog/14.jpg",
  },
  {
    id: 15,
    name: "Труба профильная",
    size: "10x10",
    image: "/images/catalog/15.jpg",
  },
];
---

<section>
  <h3>Наша процукция</h3>

  <div class="carousel">
    {
      products.map((product) => (
        <CardProductComponent id={product.id} name={product.name} size={product.size} image={product.image} />
      ))
    }
  </div>

  <div class="buttons-group">
    <button class="button__previous"></button>
    <button class="button__next"></button>
  </div>

  <a href="/catalog" class="button">Посмотреть каталог</a>
</section>

<style lang="scss">
  section {
    display: flex;
    flex-direction: column;
    gap: 80px;
    padding: 100px 40px;

    h3 {
      margin: auto;
    }

    div {
      display: flex;
      gap: 40px;
      overflow: hidden;
      margin: auto;
      max-width: 1100px;
      padding: 0 0 40px;
    }

    .buttons-group {
      gap: 10px;
      margin: auto;
      max-width: var(--t-max-width);

      button {
        background-color: var(--c-secondary);
        border-radius: 25px;
        cursor: pointer;
        padding: 6px 30px;
        margin: auto;

        &:first-of-type {
          background-color: #eeeeee;
          padding: 6px 20px;
        }

        &:hover {
          opacity: 0.6;
        }
      }
    }

    .button {
      margin: auto;
    }
  }
</style>

<script>
  // Забираем все слайды из контейнера
  const slides = document.querySelectorAll(".carousel article") as NodeListOf<HTMLDivElement>;
  // Вперед
  const next = document.querySelector(".button__next");
  // Текущий слайд
  let current = 0;
  // Всего слайдов в контейнере
  let total = slides.length - 1;

  let gap = 40;

  next.addEventListener("click", function () {
    // Проверяем является ли текущий слайд последним или сбрасываем состояние
    if (current === total) {
      current = 0;
    } else {
      current++;
    }

    // Смещаем слайд на ширину слайда + gap
    slides.forEach((slide, index) => {
      slide.style.transform = `translateX(calc(${slides[index].offsetWidth + gap}px * -${current}))`;
    });
  });

  // Назад
  const previous = document.querySelector(".button__previous");

  previous.addEventListener("click", function () {
    // Проверяем является ли текущий слайд первым или сбрасываем состояние
    if (current === 0) {
      current = total;
    } else {
      current--;
    }

    // Смещаем слайд на ширину слайда + gap
    slides.forEach((slide, index) => {
      slide.style.transform = `translateX(calc(${slides[index].offsetWidth + gap}px * -${current}))`;
    });
  });
</script>
